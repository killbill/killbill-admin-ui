<div class="kaui-container show-catalog-simple" id="catalog_simple">
<div class="existing-plans-container mt-4">
    <div class="d-flex flex-column">
    <div class="existing-plans-header mb-3">
        <div class="d-flex align-items-start flex-column">
        <h2>Existing Plans</h2>
        </div>
        <span>
        <% if @catalog_versions.present? %>
            <div class="select-catalog-version d-inline-flex align-items-center gap-1">
                <b>Catalog Versions:</b>
                <select id="select_catalog" class="selectpicker show-menu-arrow">
                    <% @catalog_versions.reverse_each do |catalog, i| %>
                        <option idx="<%= catalog[:version] %>">
                            <%= catalog[:version_date] %>
                        </option>
                    <% end %>
                </select>
            </div>
        <% end %>


        <% if can?(:delete, Kaui::AdminTenant) %>
            <%= link_to admin_tenant_delete_catalog_path(id: @tenant.id), :method => :delete, class: "text-decoration-none" do %>
                <%= render "kaui/components/button/button", {
                    label: "Delete Catalog",
                    variant: "outline-secondary d-inline-flex align-items-center gap-1",
                    type: "button",
                    html_class: "kaui-button dots-menu custom-hover",
                } %>
            <% end %>
        <% end %>
        <%= link_to download_catalog_xml_path(id: @tenant.id, effective_date: @latest_version), id: "download_link", class: "text-decoration-none" do %>
            <%= render "kaui/components/button/button", {
                label: "Download XML",
                icon: "kaui/download.svg",
                variant: "outline-secondary d-inline-flex align-items-center gap-1",
                type: "button",
                html_class: "kaui-button custom-hover"
            } %>
        <% end %>
        
        <%= link_to "javascript:void(0);", onclick: "switchXMLConfig();", class:"text-decoration-none" do %>
            <%= render "kaui/components/button/button", {
                label: "XML View",
                icon: "kaui/view-doc.svg",
                variant: "outline-secondary d-inline-flex align-items-center gap-1",
                type: "button",
                html_class: "kaui-button custom-hover"
            } %>
        <% end %>

        <% if can? :config_upload, Kaui::AdminTenant %>
            <%= link_to admin_tenant_new_catalog_path(:id => @tenant.id) do %>
                <%= render "kaui/components/button/button", {
                    label: "Add Catalog",
                    icon: "kaui/plus.svg",
                    variant: "outline-secondary d-inline-flex align-items-center gap-1",
                    type: "button",
                    html_class: "kaui-dropdown custom-hover"
                } %>
            <% end %>
        <% end %>
        </span>
    </div>
    <div class="">
        <table id="existing-plans-for-tenants" class="existing-plans-table">
            <thead>
            <tr>
            <th><%= I18n.translate('views.catalogs.show.plan_table.plan_id') %></th>
            <th><%= I18n.translate('views.catalogs.show.plan_table.product') %></th>
            <th><%= I18n.translate('views.catalogs.show.plan_table.category') %></th>
            <th><%= I18n.translate('views.catalogs.show.plan_table.billing_period') %></th>
            <th id="currency_select"></th>
            <th><%= I18n.translate('views.catalogs.show.plan_table.trial') %></th>
            <th><%= I18n.translate('views.catalogs.show.plan_table.final_phase_duration') %></th>
            <th></th>
            </tr>
            </thead>
            <tbody id="catalog_detail">

            </tbody>
        </table>
    </div>
    </div>
</div>
</div>

<script id="currencies_template" type="text/template">
  {{#catalog}}
    <select id="select_currencies" class="selectpicker show-menu-arrow">
      {{#currencies}}
          <option>{{.}}</option>
      {{/currencies}}
    </select>
  {{/catalog}}
</script>

<script id="selected_catalog_template" type="text/template" >
    {{#catalog}}
      {{#plans}}
        <tr class="selected_catalog">
          <td>{{plan_id}}</td>
          <td>{{#humanized_product_name}}{{product_name}}{{/humanized_product_name}}</td>
          <td> <span class="category">{{#humanized_product_category}}{{product_category}}{{/humanized_product_category}}</span></td>
          <td>{{#humanized_billing_period}}{{billing_period}}{{/humanized_billing_period}}</td>
          <td>
            {{#currenciesWithPrices}}
                <span class="plan_currency_{{currency}}">{{price}}</span>
            {{/currenciesWithPrices}}
          </td>
          <td>
            {{#trial_length}} {{trial_length}} {{#humanized_time_unit}}{{trial_time_unit}}{{/humanized_time_unit}} {{/trial_length}}
            {{^trial_length}} N/A {{/trial_length}}
          </td>

          <td>
            <span class="phase-duration">{{final_phase_duration}}</span>
          </td>

          <td>
            <%= link_to "{{new_plan_currency_path}}", class:"text-decoration-none" do %>
                <%= render "kaui/components/button/button", {
                    label: "Currency",
                    icon: "kaui/setting/plus.svg",
                    variant: "outline-secondary d-inline-flex align-items-center",
                    type: "button",
                    html_class: "currency-button kaui-button",
                } %>
            <% end %>
          </td>
        </tr>
      {{/plans}}
    {{/catalog}}
</script>

<%= javascript_tag do %>
    window.onload = function() {
        fetchCatalog('<%= @latest_version %>');
    };

    function renderCurrencySelect(data) {
        var template = $("#currencies_template").html();
        var currencies_html = Mustache.render(template,data);
        $("#currency_select").html(currencies_html);

        $('[id^="select_currencies"]').change(function() {
            displayAmountsForCurrency();
        });
    }

    function renderCatalog(data){
        for (var i = 0; i < data.catalog.length; i++) {
            var current = data.catalog[i];
            for (var j = 0; j < current.plans.length; j++) {
                var plan = current.plans[j];
                plan['currenciesWithPrices'] = [];
                for (var currency in plan['prices']) {
                    plan['currenciesWithPrices'].push({currency: currency, price: plan['prices'][currency]});
                }
                plan['new_plan_currency_path'] = Routes.kaui_engine_admin_tenant_new_plan_currency_path(<%= @tenant.id %>, {plan_id: plan['plan_id']});
                plan['humanized_product_name'] = function(){
                    return function (input, render) {
                        // Keep the product name as-is to avoid confusing with casing
                        return render(input);
                    }
                }

                plan['humanized_product_category'] = function(){
                    return function (input, render) {
                        var product_category = render(input);
                        if (product_category == 'BASE') {
                            return 'Base'
                        } else if (product_category == 'ADD_ON') {
                            return 'Add-on'
                        } else {
                            return product_category.toLowerCase().replace(/\b\w/g, function(l){ return l.toUpperCase() });
                        }
                    }
                }

                plan['humanized_billing_period'] = function(){
                    return function (input, render) {
                        var billing_period = render(input);
                        if (billing_period == 'NO_BILLING_PERIOD') {
                            return 'No billing period'
                        } else {
                            return billing_period.toLowerCase().replace(/\b\w/g, function(l){ return l.toUpperCase() });
                        }
                    }
                }

                plan['humanized_time_unit'] = function(){
                    return function (input, render) {
                        var time_unit = render(input);
                        return time_unit.toLowerCase().replace(/\b\w/g, function(l){ return l.toUpperCase() });
                    }
                }
            }
        }
        var template = $("#selected_catalog_template").html();
        var catalog_html = Mustache.render(template,data);
        $("#catalog_detail").html(catalog_html);
        displayAmountsForCurrency();
    }

    function initBasicConfig() {
        displayAmountsForCurrency();
    }

    function displayAmountsForCurrency() {
        $('[class^="plan_currency_"]').hide();
        $("[class^=plan_currency_" + $("#select_currencies option:selected" ).text() + "]").show();
    }

    function fetchCatalog(effectiveDate) {
        if (effectiveDate == '')
            return;

        $.ajax(
        {
            url: Routes.kaui_engine_catalog_by_effective_date_path(),
            type: "GET",
            dataType: "json",
            data: {
                id: <%= @tenant.id %>,
                effective_date: effectiveDate
            },
            success: function(data) {
                renderCurrencySelect(data);
                renderCatalog(data);

                //update the download path
                var download_path = Routes.kaui_engine_download_catalog_xml_path(<%= @tenant.id %>, { 'effective_date': effectiveDate });
                $('#download_link').attr('href',download_path);
            }
        });
    }

    $(document).ready(function() {

        $("#select_catalog").change(function() {
            fetchCatalog(this.value);
        });
    });
<% end %>

