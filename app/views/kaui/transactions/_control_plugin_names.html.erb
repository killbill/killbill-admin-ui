<div id="control_plugin_names" class="">
  <a class='dots-menu kaui-button' href="javascript:void(0);" onclick="new_control_plugin_name();" id="new_control_plugin_names"><%= '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.99992 3.3335V16.6668M16.6666 10.0002H3.33325" stroke="#1570EF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>'.html_safe + " Add Control Plugin Names" %></a>
  <table id="control_plugin_names_table" class="table table-condensed">
    <thead>
    <tr>
      <th>Control plugin name</th>
      <th></th>
    </tr>
    </thead>
    <tbody>
    <% (@control_plugin_names ||= ['']).each_with_index do |control_plugin_name, index| %>
      <tr id="control_plugin_name_<%= index %>" >
        <td><%= text_field_tag 'control_plugin_names[]', control_plugin_name, class: 'form-control' %></td>
        <td class="close-icon">
          <a class='' href="javascript:void(0);" onclick="delete_control_plugin_name(this);" id="delete_control_plugin_name_<%= index %>"><%= '<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g clip-path="url(#clip0_394_21877)">
                <path d="M12.6671 3.3335L3.33374 12.6668M3.33374 3.3335L12.6671 12.6668" stroke="#D92D20" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                </g>
                <defs>
                <clipPath id="clip0_394_21877">
                <rect width="16" height="16" fill="white"/>
                </clipPath>
                </defs>
                </svg>'.html_safe %></a>
        </td>
      </tr>
    <% end %>
    </tbody>
  </table>
</div>

<%= javascript_tag do %>

    function new_control_plugin_name() {
      /* Compute max index value to assign new rows with unsued index */
      var max_idx = $.map($('[id^=delete_control_plugin_name_]'), function(e, i) {
        return e.id.split("delete_control_plugin_name_")[1] }
      ).sort(function(a, b) {
        return b - a
      })[0];

      /* Clone existing row and reset id based on max_idx */
      var row = $('#control_plugin_names_table tbody>tr:last').clone(true);
      var row_idx = (parseInt(max_idx) + 1).toString();
      row.attr('id', "control_plugin_name_" + row_idx);
      row.children("td:last").children('a').attr('id', "delete_control_plugin_name_" + row_idx);

      /* reset value on content */
      row.find('td').each(function(){
        $(this).contents().each(function(){
            $(this).val('');
        });
      });

      /* Attach row into dom */
      row.insertAfter('#control_plugin_names_table tbody>tr:last');
    }

    function delete_control_plugin_name(obj) {
      var idx = obj.id.split("delete_control_plugin_name_")[1];
      var rowCount = $('#control_plugin_names_table tbody tr').length;

      if (rowCount > 1) {
        $("#control_plugin_name_" + idx).remove();
      } else {
        $("#control_plugin_name_" + idx).find('td').each(function(){
          $(this).find('input').val('');
        });
      }
    }

<% end %>