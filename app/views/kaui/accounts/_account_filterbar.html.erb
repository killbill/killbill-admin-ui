<div class="modal fade kaui-accounts-index-filterbar" id="advanceSearchModal" tabindex="-1" role="dialog" aria-labelledby="advanceSearchModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title d-flex align-items-center gap-3" id="advanceSearchModalLabel">
          <span class="icon-container">
            <%= image_tag("kaui/modal/search.svg", width: 20, height: 20) %>
          </span>
          Advance Search
        </h5>
        <button type="button" class="close close-button custom-hover" data-bs-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">
            <%= image_tag("kaui/modal/close.svg", width: 20, height: 20) %>
          </span>
        </button>
      </div>
      <div class="modal-body">
        <form id="advanceSearchForm">
          <div class="form-group d-flex align-items-center">
            <label for="searchFieldSelect" class="mr-2 field-label" style="width: 30%;">Search Field</label>
            <select id="searchFieldSelect" class="form-control mr-2">
              <% @search_fields.each do |value, title| %>
                <option value="<%= value %>"><%= title %></option>
              <% end %>
            </select>
            <button type="button" class="border-button custom-hover" id="addSearchField">
              <%= image_tag("kaui/modal/plus.svg", width: 16, height: 16) %>
            </button>
          </div>
          <div id="search-fields-container">
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <%= render "kaui/components/button/button", {
          label: 'Clear Search',
          variant: "outline-secondary d-inline-flex align-items-center gap-1",
          type: "button",
          html_class: "kaui-button custom-hover",
          html_options: {
            id: "clearAdvanceSearch"
          }
        } %>
        <%= render "kaui/components/button/button", {
          label: 'Apply Search',
          variant: "outline-secondary d-inline-flex align-items-center gap-1",
          type: "button",
          html_class: "kaui-dropdown custom-hover",
          html_options: {
            id: "applyAdvanceSearch"
          }
        } %>
      </div>
    </div>
  </div>
</div>

<template id="search-field-template" class="kaui-accounts-index-filterbar">
  <div class="form-group row align-items-center justify-content-between search-field">
    <label class="col-sm-3 col-form-label search-field-label"></label>
    <div class="col-sm-4">
      <select class="form-control search-field-filter">
        <option value="eq">Equals</option>
        <option value="neq">Not Equals</option>
        <option value="gt">Greater Than</option>
        <option value="gte">Greater Than Or Equal</option>
        <option value="lt">Less Than</option>
        <option value="lte">Less Than Or Equal</option>
        <option value="like">Like</option>
      </select>
    </div>
    <div class="col-sm-4">
      <input type="text" class="form-control search-field-value">
    </div>
    <button type="button" class="button custom-hover" id="remove-search-field">
      <%= image_tag("kaui/modal/red-close.svg", width: 16, height: 16) %>
    </button>
  </div>
</template>

<%= javascript_tag do %>
$(document).ready(function() {
  populateSearchLabelsFromUrl();
  var dateFields = ['Created date', 'Updated date', 'Reference time'];
  // Handle the "Add" button click to add new search fields
  $('#addSearchField').on('click', function() {
    var selectedField = $('#searchFieldSelect option:selected').text();
    var template = document.getElementById('search-field-template').content.cloneNode(true);

    // Set the label and input names based on the selected field
    template.querySelector('.search-field-label').textContent = selectedField.replace(/([A-Z])/g, ' $1').trim();
    template.querySelector('.search-field-filter').name = selectedField + 'Filter';

    // Check if the field should use a date input
    if (dateFields.includes(selectedField)) {
      template.querySelector('.search-field-value').type = 'date';
    } else {
      template.querySelector('.search-field-value').type = 'text';
    }
    template.querySelector('.search-field-value').name = selectedField;

    // Append the new search field to the container
    document.getElementById('search-fields-container').appendChild(template);
  });

  // Handle the "Apply Search" button click inside the modal
  $('#applyAdvanceSearch').on('click', function() {
    var searchFields = $('.search-field');
    var searchLabelsContainer = $('#search-labels-container');
    searchLabelsContainer.empty();

    var table = $('#accounts-table').DataTable();
    table.on('preXhr.dt', function(e, settings, data) {
      data.search.value = searchQuery;
    });

    table.ajax.url("<%= accounts_pagination_path(:ordering => @ordering, :format => :json) %>").load();

    // Update the URL with the search parameters
    var searchParams = searchQuery('');
    if (searchParams) {
      var newUrl = window.location.protocol + "//" + window.location.host + window.location.pathname + '?' + searchParams;
      window.history.pushState({ path: newUrl }, '', newUrl);
    }

    searchFields.each(function() {
      var filter = $(this).find('.search-field-filter option:selected').text();
      var value = $(this).find('.search-field-value').val();
      var columnName = $(this).find('.search-field-filter').attr('name').replace('Filter', '');

      // Create and append the search label
      if (value !== '') {
        var label = $('<span>', {
          class: 'label label-info',
          text: columnName + ' [' + filter + '] ' + value
        });
      }
      searchLabelsContainer.append(label);
    });

    $('#advanceSearchModal').modal('hide');
  });

  // Populate the modal with the current filters when it is shown
  $('#advanceSearchModal').on('show.bs.modal', function() {
    showAdvanceSearchModal();
    $('#search-fields-container .search-field').each(function() {
      var input = $(this).find('.search-field-value');
      if (dateFields.includes(input.attr('name'))) {
        input.attr('type', 'date');
      }
    });
  });

  $('#clearAdvanceSearch').on('click', function() {
    clearAdvanceSearch();
  });

  // Handle the remove icon click event to remove search fields
  $('#search-fields-container').on('click', '#remove-search-field', function() {
    $(this).closest('.search-field').remove();
  });
});
<% end %>
