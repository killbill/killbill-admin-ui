<div class="kaui-container">
  <div class="user-details-container">
    <div class="d-flex flex-column">
      <div class="user-details-header mb-3">
        <div class="d-flex align-items-start flex-column">
          <h2>User details</h2>
        </div>
        <span>
          <%= render "kaui/components/button/button", {
            label: 'Delete',
            variant: "outline-secondary d-inline-flex align-items-center gap-1",
            type: "button",
            html_class: "kaui-button delete-button custom-hover",
            html_options: { 
              data: { 
                confirm: "Are you sure?",
                method: "delete",
                turbo: false, # Optional: disable Turbo if using Rails Turbo
                "url": kaui_engine.admin_allowed_user_path(@allowed_user.id)
              },
              onclick: "if (confirm(this.dataset.confirm)) { Rails.ajax({ url: this.dataset.url, type: this.dataset.method }); }"
            }
          } %>

          <%= link_to kaui_engine.edit_admin_allowed_user_path(@allowed_user.id), 
                      :class => '' do %>
            <%= render "kaui/components/button/button", {
                  label: "Edit",
                  icon: "kaui/account/edit.svg", 
                  variant: "outline-secondary d-inline-flex align-items-center gap-1",
                  type: "button",
                  html_class: "kaui-dropdown custom-hover",
                } %>
          <% end %>

        </span>
      </div>
      <div class="row">
        <div class="col-md-4 d-flex flex-column">
          <b>Name:</b> <span><%= @allowed_user.kb_username %></span>
        </div>
        <div class="col-md-4 d-flex flex-column">
          <b>Description:</b> <span><%= @allowed_user.description %></span>
        </div>
        <div class="col-md-4 d-flex flex-column">
          <b>Roles:</b> <span><%= @roles.join(', ') %></span>
        </div>
      </div>
    </div>
  </div>
</div>


<% if can? :create, Kaui::AdminTenant %>
  <div class="kaui-container mt-4">
    <div class="user-details-container">
      <div class="d-flex flex-column">
        <div class="user-details-header mb-3">
          <div class="d-flex align-items-start flex-column">
            <h2>Configured tenants</h2>
          </div>
          <span>
          </span>
        </div>
        <div>
          <%= form_for @allowed_user, :url => {:action => :add_tenant}, :html => {:method => :post, :class => 'form-horizontal'} do |f| %>
              <%= f.hidden_field(:id) %>

              <div class='form-group'>
                <div class="col-sm-offset-2 col-sm-10">
                  <!-- Check All/Uncheck All Section -->
                  <div class="checkbox pb-2">
                    <label class="d-flex align-items-center gap-2 control-label">
                      <%= check_box_tag "check_all_tenants", "all", false, :disabled => !current_user.root?, class: "pt-2", id: "check_all_tenants" %>
                      <span class="fw-bold"><strong>All Tenants</strong></span>
                    </label>
                  </div>
                  
                  <!-- Individual Tenant Checkboxes -->
                  <% @tenants.each do |tenant| %>
                      <div class="checkbox pb-2">
                        <label class="d-flex align-items-center gap-2 control-label">
                          <%= check_box_tag "tenant_#{tenant.id}", tenant.id, @allowed_user.kaui_tenants.map(&:id).include?(tenant.id), :disabled => !current_user.root?, class: "pt-2 tenant-checkbox"  %>
                          <span><%= tenant.name || tenant.api_key %></span>
                        </label>
                      </div>
                  <% end %>
                </div>
              </div>
              <% unless !current_user.root? %>
                <div class="form-group d-flex justify-content-end pt-3 border-top">
                  <%= render "kaui/components/button/button", {
                    label: 'Close',
                    variant: "outline-secondary d-inline-flex align-items-center gap-1",
                    type: "button",
                    html_class: "kaui-button custom-hover mx-2",
                    html_options: {
                      id: "closeButton",
                      onclick: "window.history.back();"
                    }
                  } %>
                  <%= render "kaui/components/button/button", {
                    label: 'Save User',
                    variant: "outline-secondary d-inline-flex align-items-center gap-1",
                    type: "submit",
                    html_class: "kaui-dropdown custom-hover",
                  } %>
                </div>
              <% end %>
          <% end %>
        </div>
      </div>
    </div>
  </div>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const checkAllCheckbox = document.getElementById('check_all_tenants');
    const tenantCheckboxes = document.querySelectorAll('.tenant-checkbox');
    
    if (checkAllCheckbox && tenantCheckboxes.length > 0) {
      // Handle "Check All" checkbox change
      checkAllCheckbox.addEventListener('change', function() {
        const isChecked = this.checked;
        tenantCheckboxes.forEach(function(checkbox) {
          if (!checkbox.disabled) {
            checkbox.checked = isChecked;
          }
        });
      });
      
      // Handle individual tenant checkbox changes
      tenantCheckboxes.forEach(function(checkbox) {
        checkbox.addEventListener('change', function() {
          updateCheckAllState();
        });
      });
      
      // Update "Check All" state based on individual checkboxes
      function updateCheckAllState() {
        const enabledCheckboxes = Array.from(tenantCheckboxes).filter(cb => !cb.disabled);
        const checkedCount = enabledCheckboxes.filter(cb => cb.checked).length;
        
        if (checkedCount === 0) {
          checkAllCheckbox.checked = false;
          checkAllCheckbox.indeterminate = false;
        } else if (checkedCount === enabledCheckboxes.length) {
          checkAllCheckbox.checked = true;
          checkAllCheckbox.indeterminate = false;
        } else {
          checkAllCheckbox.checked = false;
          checkAllCheckbox.indeterminate = true;
        }
      }
      
      // Initialize the check all state
      updateCheckAllState();
    }
  });
</script>
